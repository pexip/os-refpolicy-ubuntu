## <summary>GNU network object model environment (GNOME)</summary>

############################################################
## <summary>
##	Role access for gnome
## </summary>
## <param name="role">
##	<summary>
##	Role allowed access
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	User domain for the role
##	</summary>
## </param>
#
interface(`gnome_role',`
	gen_require(`
		type gconfd_t, gconfd_exec_t;
		type gconf_tmp_t;
	')

	role $1 types gconfd_t;

	domain_auto_trans($2, gconfd_exec_t, gconfd_t)
	allow gconfd_t $2:fd use;
	allow gconfd_t $2:fifo_file write;
	allow gconfd_t $2:unix_stream_socket connectto;

	ps_process_pattern($2, gconfd_t)

	#gnome_stream_connect_gconf_template($1, $2)
	read_files_pattern($2, gconf_tmp_t, gconf_tmp_t)
	allow $2 gconfd_t:unix_stream_socket connectto;
')

########################################
## <summary>
##	gconf connection template.
## </summary>
## <param name="user_domain">
##	<summary>
##	The type of the user domain.
##	</summary>
## </param>
#
interface(`gnome_stream_connect_gconf',`
	gen_require(`
		type gconfd_t, gconf_tmp_t;
	')

	read_files_pattern($1, gconf_tmp_t, gconf_tmp_t)
	allow $1 gconfd_t:unix_stream_socket connectto;
')

########################################
## <summary>
##	Run gconfd in gconfd domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`gnome_domtrans_gconfd',`
	gen_require(`
		type gconfd_t, gconfd_exec_t;
	')

	domtrans_pattern($1, gconfd_exec_t, gconfd_t)
')

########################################
## <summary>
##	manage gnome homedir content (.config)
## </summary>
## <param name="user_domain">
##	<summary>
##	The type of the user domain.
##	</summary>
## </param>
#
interface(`gnome_manage_config',`
	gen_require(`
		type gnome_home_t;
	')

	allow $1 gnome_home_t:dir manage_dir_perms;
	allow $1 gnome_home_t:file manage_file_perms;
	userdom_search_user_home_dirs($1)
')
